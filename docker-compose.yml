version: '3.9'

services:

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.11
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--log.level=DEBUG"  # Adjust log level as needed
      - "--metrics.prometheus=true"
      - "--accesslog=true"
      # - "--tracing=true"      
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--metrics.prometheus.addrouterslabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--entrypoints.web.address=:80"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - prod-net

  # monitoring
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus:/etc/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

# our services
  prod-auto:
    build:
      context: .
      dockerfile: Dockerfile

    ports:
      - "1111:1111"  # Adjust port if necessary
    labels:
      - "traefik.http.routers.prod-auto.rule=PathPrefix(`/prod`)"
      - "traefik.http.middlewares.prod-auto.stripprefix.prefixes=/prod"
      - "traefik.http.routers.prod-auto.middlewares=prod-auto@docker"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

    networks:
      - prod-net
    privileged: true


networks:
  prod-net:
    driver: bridge